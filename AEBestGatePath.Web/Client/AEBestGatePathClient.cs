// <auto-generated/>
#pragma warning disable CS0618
using AEBestGatePath.API.Client.Auth;
using AEBestGatePath.API.Client.Gates;
using AEBestGatePath.API.Client.Guilds;
using AEBestGatePath.API.Client.Route;
using AEBestGatePath.API.Client.Token;
using AEBestGatePath.API.Client.User;
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions;
using Microsoft.Kiota.Serialization.Form;
using Microsoft.Kiota.Serialization.Json;
using Microsoft.Kiota.Serialization.Multipart;
using Microsoft.Kiota.Serialization.Text;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System;
namespace AEBestGatePath.API.Client
{
    /// <summary>
    /// The main entry point of the SDK, exposes the configuration and the fluent API.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class AEBestGatePathClient : BaseRequestBuilder
    {
        /// <summary>The auth property</summary>
        public global::AEBestGatePath.API.Client.Auth.AuthRequestBuilder Auth
        {
            get => new global::AEBestGatePath.API.Client.Auth.AuthRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The gates property</summary>
        public global::AEBestGatePath.API.Client.Gates.GatesRequestBuilder Gates
        {
            get => new global::AEBestGatePath.API.Client.Gates.GatesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The guilds property</summary>
        public global::AEBestGatePath.API.Client.Guilds.GuildsRequestBuilder Guilds
        {
            get => new global::AEBestGatePath.API.Client.Guilds.GuildsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The route property</summary>
        public global::AEBestGatePath.API.Client.Route.RouteRequestBuilder Route
        {
            get => new global::AEBestGatePath.API.Client.Route.RouteRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The token property</summary>
        public global::AEBestGatePath.API.Client.Token.TokenRequestBuilder Token
        {
            get => new global::AEBestGatePath.API.Client.Token.TokenRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The user property</summary>
        public global::AEBestGatePath.API.Client.User.UserRequestBuilder User
        {
            get => new global::AEBestGatePath.API.Client.User.UserRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new <see cref="global::AEBestGatePath.API.Client.AEBestGatePathClient"/> and sets the default values.
        /// </summary>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public AEBestGatePathClient(IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}", new Dictionary<string, object>())
        {
            ApiClientBuilder.RegisterDefaultSerializer<JsonSerializationWriterFactory>();
            ApiClientBuilder.RegisterDefaultSerializer<TextSerializationWriterFactory>();
            ApiClientBuilder.RegisterDefaultSerializer<FormSerializationWriterFactory>();
            ApiClientBuilder.RegisterDefaultSerializer<MultipartSerializationWriterFactory>();
            ApiClientBuilder.RegisterDefaultDeserializer<JsonParseNodeFactory>();
            ApiClientBuilder.RegisterDefaultDeserializer<TextParseNodeFactory>();
            ApiClientBuilder.RegisterDefaultDeserializer<FormParseNodeFactory>();
        }
    }
}
#pragma warning restore CS0618
